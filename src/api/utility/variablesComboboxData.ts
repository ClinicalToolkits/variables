import { ComboboxData } from "@clinicaltoolkits/type-definitions";
import { fetchVariables } from "../fetchVariable";
import { convertVariablesToComboboxData } from "../../types";
import { getSupabaseClient, logger } from "@clinicaltoolkits/utility-functions";

// TODO: The below is significantly more performant than the original implementation. However, it doesn't correctly calculate the `idTokens` for the variables. Need to fix this.
export const fetchVariablesComboboxData = async (variableIds?: string[]): Promise<ComboboxData[]> => {
  const supabaseClient = getSupabaseClient();
  let variableComboboxData: ComboboxData[] = [];
  let query = supabaseClient
    .from("variables")
    .select(`id, label`)

  if (variableIds) {
    query = query.in("id", variableIds);
  }

  try {
    const { data, error } = await query;
    if (error) {
      throw new Error(`Supabase error: ${error.message}`);
    }
    variableComboboxData = data;
  } catch (error) {
    logger.error('Error fetching variables:', error);
  }

  //const variables = await fetchVariables({ bIncludeAutoGeneratedVariables: false });
  //const variableComboboxData = convertVariablesToComboboxData(variables);
  return variableComboboxData;
};
