import { Variable, VariableMap } from "../../../types";

export interface GetVariablesArrayProps {
  inVariableMap: VariableMap;
  inVariableIds?: string[];
  bInIncludeAutoGeneratedVariables?: boolean;
}
export const getVariablesArray = ({ inVariableMap, inVariableIds, bInIncludeAutoGeneratedVariables = true}: GetVariablesArrayProps): Variable[] => {
  let variables: Variable[] = [];

  if (inVariableIds) {
    inVariableIds.map((id) => {
      const variable = inVariableMap.get(id);
      if (!variable) {
        throw Error(`VariableContext::getVariablesArray() - Variable with id ${id} not found`);
      }
      bInIncludeAutoGeneratedVariables ? variables.push(variable) : !variable.metadata?.bAutoGenerated && variables.push(variable);
    });
  } else {
    if (bInIncludeAutoGeneratedVariables) {
      variables = Array.from(inVariableMap.values());
    } else {
      variables = Array.from(inVariableMap.values()).filter((variable) => !variable.metadata?.bAutoGenerated);
    }
  }

  return variables;
};
